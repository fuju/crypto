from pwn import *
from string import printable
from Crypto.Util.Padding import pad, unpad
from Crypto.Cipher import AES

def reverse_string(s):
    reversed_string = ""
    for i in range(len(s)-1, -1, -1):
        reversed_string += s[i]
    return reversed_string

server = connect("130.192.5.212", "6542")

flag_reverse = ""
flag = ""

for i in range(46):
    server.recv(1024) #menu
    server.sendline(b'enc')
    server.recv(1024) #>
    server.sendline(('a'*(14+i)).encode().hex().encode())
    enc_flag = bytes.fromhex(server.recvline().decode().strip())[64:80]
    for char in printable:
        server.recv(1024)
        server.sendline(b'enc')
        server.recv(1024)
        #11 so that || with padding will generate a single block
        server.sendline((('a'*11).encode() + pad(char.encode() + flag.encode(), AES.block_size)).hex().encode())
        enc_bytes = bytes.fromhex(server.recvline().decode().strip())
        if enc_bytes[16:32] == enc_flag:
            flag_reverse += char
            flag = reverse_string(flag_reverse)
            print("Flag: " + flag)