from string import printable
from Crypto.Util.strxor import strxor

CHARACTER_FREQ = {
    'a': 0.0651738, 'b': 0.0124248, 'c': 0.0217339, 'd': 0.0349835, 'e': 0.1041442, 'f': 0.0197881, 'g': 0.0158610,
    'h': 0.0492888, 'i': 0.0558094, 'j': 0.0009033, 'k': 0.0050529, 'l': 0.0331490, 'm': 0.0202124, 'n': 0.0564513,
    'o': 0.0596302, 'p': 0.0137645, 'q': 0.0008606, 'r': 0.0497563, 's': 0.0515760, 't': 0.0729357, 'u': 0.0225134,
    'v': 0.0082903, 'w': 0.0171272, 'x': 0.0013692, 'y': 0.0145984, 'z': 0.0007836, ' ': 0.1918182
}

file = open("file.enc", "rb")
enc_text = file.read()
print(len(enc_text))
ciphertexts = []
KEYSTREAM_SIZE = 1000
for i in range(0, len(enc_text), KEYSTREAM_SIZE):
    if i + KEYSTREAM_SIZE >= len(enc_text):
        ciphertexts.append(enc_text[i:])
    else:
        ciphertexts.append(enc_text[i:i+KEYSTREAM_SIZE])

#print(len(ciphertexts))
#print(ciphertexts[0])

max_len = 0
for c in ciphertexts:
    if len(c) > max_len:
        max_len = len(c)

print(max_len)

canditates_list = []
for byte_num in range(max_len):
    freqs = [0.0]*256

    for guessed_byte in range(256):
        for c in ciphertexts:
            if byte_num >= len(c):
                continue
            if chr(c[byte_num] ^ guessed_byte) in printable:
                freqs[guessed_byte] += CHARACTER_FREQ.get(chr(c[byte_num] ^ guessed_byte).lower(), 0)
            
    match_list = [(freqs[i], i) for i in range(256)]
    ordered_match_list = sorted(match_list, reverse=True)
    canditates_list.append(ordered_match_list)

keystream = bytearray()
for x in canditates_list:
    keystream.append(x[0][1])

out = open("dec.txt", "wb")
for c in ciphertexts:
    l = min(len(c), len(keystream))
    out.write(strxor(keystream[:l], c[:l]))